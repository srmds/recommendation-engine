plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '1.2.3'
}

group 'nl.jongensvantechniek'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    provided
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

ext {
    mainClassFile='nl.jongensvantechniek.movierecommendations.application.Main'
    title='movie-recommandations-engine'
    commonsioVersions=2.5
    version='0.0.1'
    scalaVersion='2.11.8'
    slf4jVersion='1.7.21'
    logbackVersion='1.1.7'
    sparkVersion='2.2.2'
}

dependencies {

    //Scala
    compile "org.scala-lang:scala-library:$scalaVersion"
    compile "org.scala-lang:scala-reflect:$scalaVersion"
    compile "org.scala-lang:scala-compiler:$scalaVersion"

    //Spark
    compile "org.apache.spark:spark-mllib_2.11:$sparkVersion"
    compile "org.apache.spark:spark-sql_2.11:$sparkVersion"
    compile "org.apache.spark:spark-streaming-flume-assembly_2.11:$sparkVersion"
    compile "org.apache.spark:spark-graphx_2.11:$sparkVersion"
    compile "org.apache.spark:spark-launcher_2.11:$sparkVersion"
    compile "org.apache.spark:spark-catalyst_2.11:$sparkVersion"
    compile "org.apache.spark:spark-streaming_2.11:$sparkVersion"
    compile "org.apache.spark:spark-core_2.11:$sparkVersion"

    //Commons
    compile "commons-io:commons-io:$commonsioVersions"
}

task run(type: JavaExec, dependsOn: classes) {
    main = mainClassFile
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

jar {
    classifier = 'all'
    manifest {
        attributes 'Implementation-Title': title,
                'Implementation-Version': version,
                'Main-Class': mainClassFile
    }
    include{sourceSets.main.output.classesDir}
    zip64 true
}

shadowJar {
    classifier = 'shadow'
    append 'reference.conf'
    dependencies {

    }
}

idea {
    module {
        // IntelliJ does not know about the standard idiom of provided as used in managing
        // uber/shaded jar dependencies. Make it so!
        scopes.PROVIDED.plus += [ configurations.provided ]
    }
}
